name: "CodeQL Advanced"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '28 16 * * 4'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: c-cpp
            build-mode: autobuild

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install dependencies for Exiv2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ make libboost-dev
      # Build, Test, and Install Exiv2 (using the main repo)
      - name: Build and install Exiv2
        run: |
          mkdir -p build && cd build  # Create build directory and navigate into it
          cmake .. -DCMAKE_BUILD_TYPE=Release  # Run cmake to configure the build
          cmake --build .  # Build the project
          make tests  # Run tests
          sudo make install  # Install Exiv2
      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - if: matrix.build-mode == 'manual'
        shell: bash
        run: |
          echo 'If you are using a "manual" build mode for one or more of the' \
            'languages you are analyzing, replace this with the commands to build' \
            'your code, for example:'
          echo '  make bootstrap'
          echo '  make release'
          exit 1
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
